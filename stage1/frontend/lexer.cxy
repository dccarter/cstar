module lexer

macro BIT(n) (1 << n)

enum LexerFlags: u32 {
    None = 0,
    EnterStringExpr    = #{1 << 0}
    ContinueStringExpr = #{1 << 1}
    ExitStringExpr     = #{1 << 2}
    ReturnLStrFmt      = #{1 << 3}
    MaybeNotFloat      = #{1 << 4}
}

class Lexer {
    filename: string = null
    data:     &char = null
    fileSize: u64 = 0
    filePos:  FilePos
    flags: LexerFlags = .None
    keywords: HashSet[InternedString]
    L: Log

    func `init`(pool: StrPool) {
        // intern all the keywords
        for (const tok: TokId._kwBegin..TokId._kwEnd) {
            pool.intern(toString(tok))
        }
    }
}