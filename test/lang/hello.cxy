/**
 * Simplicity
 */

pub native type FILE;
pub native var stdin: &FILE
pub native var stdout: &FILE

pub native func puts(str: string) : i32;
pub native func fputs(str: string, stream: &FILE) : i32;
pub native func fgets(data: &char, size: i32, stream: &FILE) : &char;

pub func println(str: string) => puts(str)

struct Base {
    id: i64
}

struct Account : Base {
    name: string
    balance: f64
    id: i64

    func deposit(amount: f64) {
        super.id = 10
        this.balance += amount
    }

    func withdraw(amount: f64) {
        if (balance < amount) {
            puts("Insufficient funds")
            return;
        }
        balance -= amount
    }

    const func `str`() : string => f"Account{name: ${name}, balance: ${balance}}"

    const func `+`(other: &const Account) => Account{name: name, balance: balance + other.balance}

    func `..`(cb: func(amount: f64) -> void) => {
        var i = 0.5;
        while (i < 10) {
            cb(balance + i)
            i += 0.5
        }
    }
}

func main(args: [string]) {
    var acc1 = new auto Account{name: "Checking", balance: 100};
    for (const b: acc1) {
        puts(f"${b}")
    }
}
