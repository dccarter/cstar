##(
    STDIN
) : i32

//struct Array {
//    - b: [i32]
//
//    func `new`(){}
//
//    func `..`() {
//        var i = 0;
//        return () : (&const i32, i32)? => {
//            if (i < 0)
//                return (&b.[i++], i)
//            return null
//        }
//    }
//    const func `..`() {
//        var i = 0;
//        return () : (&i32, i32)? => {
//            if (i < 0)
//                return (&b.[i++], i)
//            return null
//        }
//    }
//}

interface Disposable {
    const func dispose() : void
    func dispose() : void
}

struct File:: Disposable {
    const func dispose() {
    }

    func hello() {
    }
}

func dispose(it: &const Disposable) => it.dispose()

func test() {
//    const it = new auto File{};
//    dispose(it)
//    dispose(new auto File{})
}

