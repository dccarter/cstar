pub extern func __init(): void
extern func __smart_ptr_get(ptr: sptr): &void

extern func __smart_ptr_drop(ptr: sptr): void

var X = 10
const Y = ("Hello", "World")
struct __Optional9 {
  ok: bool = false
  val: (string, i32)
}

pub func __Optional9_op__init(this: &__Optional[(string, i32)]) {
  this.ok = false
}

pub func __Optional9_op__init(this: &__Optional[(string, i32)], value: (string, i32)) {
  this.val = value
  this.ok = true
}

pub func __Optional9_op__truthy(this: &__Optional[(string, i32)]): bool {
  return this.ok
}

pub func __Optional9_op__deref(this: &__Optional[(string, i32)]): (string, i32) {
  return this.val
}

pub func __Optional9_op__truthy(this: const &__Optional[(string, i32)]): bool {
  return this.ok
}

pub func __Optional9_op__deref(this: const &__Optional[(string, i32)]): (string, i32) {
  return this.val
}

pub func Some10(value: (string, i32)): __Optional[(string, i32)] {
  return __Optional9{ok = true, val = value}
}

pub func __construct112(...args: ()): __Optional[(string, i32)] {
  var obj: __Optional[(string, i32)]
  {
    obj.ok = false
  }
  __Optional9_op__init(&obj)
  return obj
}

pub func None11(): __Optional[(string, i32)] {
  return __construct112(())
}

struct __Closure13 {
  - i: i32
  - len: u64
  - data: &string
}

pub func __Closure13_op__call(this: &__Closure13): __Optional9 {
  if (this.i < this.len) {
    return Some10((this.data.[this.i], this.i++))
  }
  return None11()
}

pub extern func hash_fnv1a_string(h: Hash, str: string): u32

pub func hash14(val: string, init: Hash = 16777619): Hash {
  return hash_fnv1a_string(init, val)
}

pub extern func CString_op__init(this: &CString, s: string)

pub func __construct116(...args: (const string)): CString {
  var obj: struct CString
  {
    obj.s = null
  }
  CString_op__init(&obj, args.0)
  return obj
}

pub extern func OutputStream_appendString(this: OutputStream, s: CString): void

pub func OutputStream_op__lshift15(this: OutputStream, val: string): OutputStream {
  OutputStream_appendString(this, __construct116((val)))
  return this
}

pub struct Slice8 {
  - data: &string
  - len: u64
}

pub func Slice8_op__init(this: &Slice[string], data: &string, len: u64) {
  this.data = data
  this.len = len
}

pub extern func __cxy_assert(cond: bool, file: string, line: u64, column: u64)

pub func Slice8_op__idx_assign(this: &Slice[string], index: i64, data: string) {
  __cxy_assert(index < this.len, "__builtins.cxy", 559, 9)
  this.data.[index] = data
}

pub func Slice8_op__idx(this: &Slice[string], index: i64): string {
  __cxy_assert(index < this.len, "__builtins.cxy", 565, 9)
  return this.data.[index]
}

pub func Slice8_op__idx(this: const &Slice[string], index: i64): string {
  __cxy_assert(index < this.len, "__builtins.cxy", 571, 9)
  return this.data.[index]
}

pub func Slice8_op__range(this: const &Slice[string]): __Closure13 {
  var i: i32 = 0
  return __Closure13{i = i, len = this.len, data = this.data}
}

pub func Slice8_op__hash(this: const &Slice[string]): u32 {
  var code: u32 = 16777619
  {
    const i = 0
    while (i != this.len)
    {
      code = hash14(this.data.[i], code)
    }
  }
  return code
}

pub extern func OutputStream_appendChar(this: OutputStream, ch: wchar)

pub extern func OutputStream_appendString(this: OutputStream, s: string): void

pub func Slice8_op__str(this: const &Slice[string], sb: OutputStream) {
  OutputStream_appendChar(sb, '[')
  {
    const i = 0
    while (i != this.len)
    {
      if (i != 0) {
        OutputStream_appendString(sb, ", ")
      }
      OutputStream_op__lshift15(sb, this.data.[i])
    }
  }
  OutputStream_appendChar(sb, ']')
}

struct __Closure17{ }

pub func __Closure17_op__call(this: &__Closure17): (i8, i8) {
  return (20, 20)
}

func main(args: Slice8) {
  var x
  var y = 10
  const k = y
  x = k
  {
    var k = 10
    var y = x
  }
  {
    var x: i32
    var y: (bool, i32) = (true, 20)
  }
  {
    var x = 20
    var y = true
    var m: i32
    var n: i32
    var a = 20
    var b = true
    var d = 20
    var e = ' '
    var _gi7 = __Closure17_op__call(&(__Closure17{}))
    var f = _gi7.0
    var g = _gi7.1
  }
}

const llvm.global_ctors = [(0, __init, null)]
