pub extern func __init(): void
extern func __smart_ptr_get(ptr: sptr): &void

extern func __smart_ptr_drop(ptr: sptr): void

func closureArg0(fn: (&void, func(_: &void) -> void)) {
  fn.1(fn.0)
}

func closureArg1(msg: string, fn: (&void, func(_: &void, msg: string) -> void)) {
  fn.1(fn.0, msg)
}

func closureArg2(fn: (&void, func(_: &void, msg: string) -> void)) {
  closureArg1("hello", fn)
}

struct __Optional11 {
  ok: bool = false
  val: (string, i32)
}

pub func __Optional11_op__init(this: &__Optional[(string, i32)]) {
  this.ok = false
}

pub func __Optional11_op__init(this: &__Optional[(string, i32)], value: (string, i32)) {
  this.val = value
  this.ok = true
}

pub func __Optional11_op__truthy(this: &__Optional[(string, i32)]): bool {
  return this.ok
}

pub func __Optional11_op__deref(this: &__Optional[(string, i32)]): (string, i32) {
  return this.val
}

pub func __Optional11_op__truthy(this: const &__Optional[(string, i32)]): bool {
  return this.ok
}

pub func __Optional11_op__deref(this: const &__Optional[(string, i32)]): (string, i32) {
  return this.val
}

pub func Some12(value: (string, i32)): __Optional[(string, i32)] {
  return __Optional11{ok = true, val = value}
}

pub func __construct114(...args: ()): __Optional[(string, i32)] {
  var obj: __Optional[(string, i32)]
  {
    obj.ok = false
  }
  __Optional11_op__init(&obj)
  return obj
}

pub func None13(): __Optional[(string, i32)] {
  return __construct114(())
}

struct __Closure15 {
  - i: i32
  - len: u64
  - data: &string
}

pub func __Closure15_op__call(this: &__Closure15): __Optional11 {
  if (this.i < this.len) {
    return Some12((this.data.[this.i], this.i++))
  }
  return None13()
}

pub extern func hash_fnv1a_string(h: Hash, str: string): u32

pub func hash16(val: string, init: Hash = 16777619): Hash {
  return hash_fnv1a_string(init, val)
}

pub extern func CString_op__init(this: &CString, s: string)

pub func __construct118(...args: (const string)): CString {
  var obj: struct CString
  {
    obj.s = null
  }
  CString_op__init(&obj, args.0)
  return obj
}

pub extern func OutputStream_appendString(this: OutputStream, s: CString): void

pub func OutputStream_op__lshift17(this: OutputStream, val: string): OutputStream {
  OutputStream_appendString(this, __construct118((val)))
  return this
}

pub struct Slice10 {
  - data: &string
  - len: u64
}

pub func Slice10_op__init(this: &Slice[string], data: &string, len: u64) {
  this.data = data
  this.len = len
}

pub extern func __cxy_assert(cond: bool, file: string, line: u64, column: u64)

pub func Slice10_op__idx_assign(this: &Slice[string], index: i64, data: string) {
  __cxy_assert(index < this.len, "__builtins.cxy", 559, 9)
  this.data.[index] = data
}

pub func Slice10_op__idx(this: &Slice[string], index: i64): string {
  __cxy_assert(index < this.len, "__builtins.cxy", 565, 9)
  return this.data.[index]
}

pub func Slice10_op__idx(this: const &Slice[string], index: i64): string {
  __cxy_assert(index < this.len, "__builtins.cxy", 571, 9)
  return this.data.[index]
}

pub func Slice10_op__range(this: const &Slice[string]): __Closure15 {
  var i: i32 = 0
  return __Closure15{i = i, len = this.len, data = this.data}
}

pub func Slice10_op__hash(this: const &Slice[string]): u32 {
  var code: u32 = 16777619
  {
    const i = 0
    while (i != this.len)
    {
      code = hash16(this.data.[i], code)
    }
  }
  return code
}

pub extern func OutputStream_appendChar(this: OutputStream, ch: wchar)

pub extern func OutputStream_appendString(this: OutputStream, s: string): void

pub func Slice10_op__str(this: const &Slice[string], sb: OutputStream) {
  OutputStream_appendChar(sb, '[')
  {
    const i = 0
    while (i != this.len)
    {
      if (i != 0) {
        OutputStream_appendString(sb, ", ")
      }
      OutputStream_op__lshift17(sb, this.data.[i])
    }
  }
  OutputStream_appendChar(sb, ']')
}

struct __Closure19{ }

pub func __Closure19_op__call(this: &__Closure19): i8 {
  return 1
}

pub extern func String_op__deinit(this: String)

func __deinit_fwd21(ptr: sptr) {
  var obj = ((ptr : &class String))
  String_op__deinit(obj)
}

extern func __smart_ptr_alloc(size: u64, dctor: func(ptr: sptr) -> void = null): &void


pub extern func String_op__init(this: String)

pub func __construct020(...args: ()): String {
  var obj = ((__smart_ptr_alloc(__bc(0, #String), __deinit_fwd21) : class String))
  {
    obj.vtable = &String_vTable
    obj._capacity = 0
    obj._size = 0
    obj._data = null
  }
  String_op__init(obj)
  return obj
}

struct __Closure22{ }

pub func __Closure22_op__call(this: &__Closure22, name: string): String {
  var sb7 = __construct020(())
  return sb7
}

struct __Closure23{ }

pub func __Closure23_op__call(this: &__Closure23): String {
  var sb8 = __construct020(())
  return sb8
}

struct __Closure24{ }

pub func __Closure24_op__call(this: &__Closure24): String {
  var sb9 = __construct020(())
  return sb9
}

struct __Closure25{ }

pub func __Closure25_op__call(this: &__Closure25) {
  const g = __Closure24{}
}

struct __Closure26{ }

pub func __Closure26_op__call(this: &__Closure26) { }


func __Closure26__fwd(ptr: &void): void => __Closure26_op__call(<&__Closure26>ptr)

struct __Closure27{ }

pub func __Closure27_op__call(this: &__Closure27, msg: string) { }


func __Closure27__fwd(ptr: &void, msg: string): void => __Closure27_op__call(<&__Closure27>ptr, msg)

func main(args: Slice10) {
  const one = __Closure19{}
  __Closure19_op__call(&one)
  __Closure22_op__call(&(__Closure22{}), "User")
  var x = 100
  var b = "Hello"
  __Closure23_op__call(&(__Closure23{}))
  const f = __Closure25{}
  closureArg0((<&void>&__Closure26{}, __Closure26__fwd))
  closureArg2((<&void>&__Closure27{}, __Closure27__fwd))
}

const llvm.global_ctors = [(0, __init, null)]
