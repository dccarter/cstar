
func closureArg0(fn: func() -> void) {
    fn()
}

func closureArg1(msg: string, fn: func(msg: string) -> void) {
    fn(msg)
}

func closureArg2(fn: func(msg: string) -> void) {
    closureArg1("hello", fn)
}

func main(args: [string]) {
    // simple closure
    const one = () => 1;
    one();

    // iic
    ((name: string)  => {
        return f"Hello ${name}"
    })("User");

    // capture
    var x = 100;
    var b = "Hello";
    (() => f"${b} -> ${x}")()

    // nested capture
    const f = () => {
        //
        const g = () => f"${b} -> ${x}"
    }

    closureArg0(() => {})
    closureArg2((msg: string) => {})
}
