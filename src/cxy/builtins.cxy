

/**
 * Builtin optional type
 *
 * Corresponds to type T?
 */
struct Optional[T] {
    - valid: bool = false
    - value: T

    /* Creates an invalid optional type */
    func `new`() { valid = false }

    /* Creates a valid optional type */
    func `new`(value: T) {
        value = value
        valid = true
    }

    /* Checks whether an optional is valid or not */
    @inline
    bool `!!`() => valid

    /* Dereference an optional, i.e get the underlying value. */
    @inline
    bool `*`() => value
}

/* Creates a valid optional value */
@inline
func Some[T](value: T) => Optional[T](value)

/* Creates an invalid optional value */
@inline
func None[T]() => Optional[T](value)