import { Server, Request, Response, Config, Cors, Method } from "stdlib/http.cxy"

class Log {
    func `init`() { }
    func before(req: &const Request, resp: &Response) {
        //stdout << "Before Log\n"
    }
    func after(req: &const Request, resp: &Response) {
        //stdout << "After Log\n"
    }
}

class Security {
    - _id: u64 = 0;
    func `init`() { }
    func id() => _id++

    func before(req: &const Request, resp: &Response) {
        //stdout << "Before Security\n"
    }

    func after(req: &const Request, resp: &Response) {
        //stdout << "After Security\n"
    }
}

pub func main()  {
    var server = Server[(Log, Cors, Security)]();

    server("/hello/{name}", (req: &const Request, resp: &Response) => {
        var name = req.param("name");
        resp.body() << "hello " << name << " " << server.middleware[Security]().id()
    })([Method.Head, Method.Options]) // add support for and options method

    server.start()
}
